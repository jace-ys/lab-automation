# coding: utf-8

"""
    Riffyn Nexus REST API V1

    ## Vocabulary Before you begin, please familiarize yourself with our [Glossary of Terms](https://help.riffyn.com/hc/en-us/articles/360045503694). ## Getting Started If you'd like to play around with the API, there are several free GUI tools that will allow you to send requests and receive responses. We suggest using the free app [Postman](https://www.getpostman.com/). ## Authentication Begin with a call the [authenticate](#/authentication/authenticate) endpoint using [HTTP Basic authentication](https://en.wikipedia.org/wiki/Basic_access_authentication) with your `username` and `password` to retrieve either an API Key or an Access Token. For example:      curl -X POST -u '<username>' https://api.app.riffyn.com/v1/auth -v  You may then use either the API Key or the accessToken for all future requests to the API. For example:      curl -H 'access-token: <ACCESS_TOKEN>' https://api.app.riffyn.com/v1/units -v      curl -H 'api-key: <API_KEY>' https://api.app.riffyn.com/v1/units -v  The tokens' values will be either in the message returned by the `/authenticate` endpoint or in the createApiKey `/auth/api-key` or CreateAccesToken `/auth/access-token` endpoints. The API Key will remain valid until it is deauthorized by revoking it through the Security Settings in the Riffyn Nexus App UI. The API Key is best for running scripts and longer lasting interactions with the API. The Access Token will expire automatically and is best suited to granting applications short term access to the Riffyn Nexus API. Make your requests by sending the HTTP header `api-key: $API_KEY`, or `access-token: $ACCESS_TOKEN`. In Postman, add your preferred token to the headers under the Headers tab for any request other than the original request to `/authenticate`.  If you are enrolled in MultiFactor Authentication (MFA) the `status` returned by the `/authenticate` endpoint will be `MFA_REQUIRED`. A `passCode`, a `stateToken`, and a `factorId` must be passed to the [/verify](#/authentication/verify) endpoint to complete the authentication process and achieve the `SUCCESS` status. MFA must be managed in the Riffyn Nexus App UI.  ## Paging and Sorting The majority of endpoints that return a list of data support paging and sorting through the use of three properties, `limit`,  `offset`, and `sort`. Please see the list of query parameters, displayed below each endpoint's code examples, to see if paging or sorting is supported for that specific endpoint.  Certain endpoints return data that's added frequently, like resources. As a result, you may want filter results on either the maximum or minimum creation timestamp. This will prevent rows from shifting their position from the top of the list, as you scroll though subsequent pages of a multi-page response.  Before querying for the first page, store the current date-time (in memory, a database, a file...). On subsequent pages you *may* include the `before` query parameter, to limit the results to records created before that date-time. E.g. before loading page one, you store the current date time of `2016-10-31T22:00:00Z` (ISO date format). Later, when generating the URL for page two, you *could* limit the results by including the query parameter `before=1477951200000` (epoch timestamp).  ## Postman endpoint examples There is a YAML file with the examples of the request on Riffyn Nexus API [Click here](/v1/collection) to get the file. If you don't know how to import the collection file, [here](https://learning.postman.com/docs/postman/collections/data-formats/#importing-postman-data) are the steps. ## Client SDKs You may write your own API client, or you may use one of ours. [Click here](/v1/clients) to select your programming language and download an API client.   # noqa: E501

    OpenAPI spec version: 4.2.0
    Contact: support@riffyn.com
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import riffyn_nexus_sdk_v1
from riffyn_nexus_sdk_v1.api.process_api import ProcessApi  # noqa: E501
from riffyn_nexus_sdk_v1.rest import ApiException


class TestProcessApi(unittest.TestCase):
    """ProcessApi unit test stubs"""

    def setUp(self):
        self.api = ProcessApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_add_connection(self):
        """Test case for add_connection

        addConnection  # noqa: E501
        """
        pass

    def test_add_process_comment(self):
        """Test case for add_process_comment

        addProcessComment  # noqa: E501
        """
        pass

    def test_add_tag_to_process(self):
        """Test case for add_tag_to_process

        addTagToProcess  # noqa: E501
        """
        pass

    def test_create_group(self):
        """Test case for create_group

        createGroup  # noqa: E501
        """
        pass

    def test_create_process(self):
        """Test case for create_process

        createProcess  # noqa: E501
        """
        pass

    def test_delete_connection(self):
        """Test case for delete_connection

        deleteConnection  # noqa: E501
        """
        pass

    def test_delete_group(self):
        """Test case for delete_group

        deleteGroup  # noqa: E501
        """
        pass

    def test_delete_process(self):
        """Test case for delete_process

        deleteProcess  # noqa: E501
        """
        pass

    def test_delete_process_comment(self):
        """Test case for delete_process_comment

        deleteProcessComment  # noqa: E501
        """
        pass

    def test_delete_tag_from_process(self):
        """Test case for delete_tag_from_process

        deleteTagFromProcess  # noqa: E501
        """
        pass

    def test_duplicate_process(self):
        """Test case for duplicate_process

        duplicateProcess  # noqa: E501
        """
        pass

    def test_export_to_enclosing_group(self):
        """Test case for export_to_enclosing_group

        exportToEnclosingGroup  # noqa: E501
        """
        pass

    def test_get_group(self):
        """Test case for get_group

        getGroup  # noqa: E501
        """
        pass

    def test_get_process(self):
        """Test case for get_process

        getProcess  # noqa: E501
        """
        pass

    def test_get_process_comment(self):
        """Test case for get_process_comment

        getProcessComment  # noqa: E501
        """
        pass

    def test_get_process_version(self):
        """Test case for get_process_version

        getProcessVersion  # noqa: E501
        """
        pass

    def test_get_role_for_process(self):
        """Test case for get_role_for_process

        getRoleForProcess  # noqa: E501
        """
        pass

    def test_get_upload_config(self):
        """Test case for get_upload_config

        getUploadConfig  # noqa: E501
        """
        pass

    def test_get_upload_config_collection(self):
        """Test case for get_upload_config_collection

        getUploadConfigCollection  # noqa: E501
        """
        pass

    def test_list_groups(self):
        """Test case for list_groups

        listGroups  # noqa: E501
        """
        pass

    def test_list_process_comments(self):
        """Test case for list_process_comments

        listProcessComments  # noqa: E501
        """
        pass

    def test_list_process_tags(self):
        """Test case for list_process_tags

        listProcessTags  # noqa: E501
        """
        pass

    def test_list_process_versions(self):
        """Test case for list_process_versions

        listProcessVersions  # noqa: E501
        """
        pass

    def test_list_processes(self):
        """Test case for list_processes

        listProcesses  # noqa: E501
        """
        pass

    def test_list_replies_to_process_comment(self):
        """Test case for list_replies_to_process_comment

        listRepliesToProcessComment  # noqa: E501
        """
        pass

    def test_list_upload_config_collections(self):
        """Test case for list_upload_config_collections

        listUploadConfigCollections  # noqa: E501
        """
        pass

    def test_list_upload_configs(self):
        """Test case for list_upload_configs

        listUploadConfigs  # noqa: E501
        """
        pass

    def test_reply_to_process_comment(self):
        """Test case for reply_to_process_comment

        replyToProcessComment  # noqa: E501
        """
        pass

    def test_share_process(self):
        """Test case for share_process

        shareProcess  # noqa: E501
        """
        pass

    def test_unshare_process(self):
        """Test case for unshare_process

        unshareProcess  # noqa: E501
        """
        pass

    def test_update_group(self):
        """Test case for update_group

        updateGroup  # noqa: E501
        """
        pass

    def test_update_process(self):
        """Test case for update_process

        updateProcess  # noqa: E501
        """
        pass

    def test_update_process_comment(self):
        """Test case for update_process_comment

        updateProcessComment  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
