name: service.tecan-spark-relay

on: push

env:
  WORKDIR: ./services/tecan-spark-relay

jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0"
      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-service.tecan-spark-relay-${{ hashFiles('services/tecan-spark-relay/TecanSparkRelay.csproj') }}
          restore-keys: ${{ runner.os }}-service.tecan-spark-relay-
      - working-directory: ${{ env.WORKDIR }}
        run: dotnet restore

  lint:
    needs: setup
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0"
      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-service.tecan-spark-relay-${{ hashFiles('services/tecan-spark-relay/TecanSparkRelay.csproj') }}
          restore-keys: ${{ runner.os }}-service.tecan-spark-relay-
      - run: dotnet tool install -g dotnet-format
      - name: Lint code
        working-directory: ${{ env.WORKDIR }}
        run: dotnet format --check

  test:
    needs: setup
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-dotnet@v1
        with:
          dotnet-version: "5.0"
      - uses: actions/cache@v2
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-service.tecan-spark-relay-${{ hashFiles('services/tecan-spark-relay/TecanSparkRelay.csproj') }}
          restore-keys: ${{ runner.os }}-service.tecan-spark-relay-
      - name: Run tests
        working-directory: ${{ env.WORKDIR }}
        run: dotnet test --no-restore
