name: service.ot-builder

on: push

env:
  WORKDIR: ./services/ot-builder

jobs:
  setup:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-service.ot-builder-${{ hashFiles('services/ot-builder/poetry.lock') }}
          restore-keys: ${{ runner.os }}-service.ot-builder-
      - uses: snok/install-poetry@v1.1.1
      - name: Install dependencies
        working-directory: ${{ env.WORKDIR }}
        run: poetry install

  lint:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-service.ot-builder-${{ hashFiles('services/ot-builder/poetry.lock') }}
          restore-keys: ${{ runner.os }}-service.ot-builder-
      - uses: snok/install-poetry@v1.1.1
      - name: Lint code
        working-directory: ${{ env.WORKDIR }}
        run: poetry run black . --check --diff --exclude vendor

  test:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-service.ot-builder-${{ hashFiles('services/ot-builder/poetry.lock') }}
          restore-keys: ${{ runner.os }}-service.ot-builder-
      - uses: snok/install-poetry@v1.1.1
      # - name: Run tests
      #   working-directory: ${{ env.WORKDIR }}
      #   run: make test
